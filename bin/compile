#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

#mktmpdir() {
  #dir=$(mktemp -t node-$1-XXXX)
  #rm -rf $dir
  #mkdir -p $dir
  #echo $dir
#}

#function indent() {
  #c='s/^/       /'
  #case $(uname) in
    #Darwin) sed -l "$c";;
    #*)      sed -u "$c";;
  #esac
#}

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# environment defaults:
CL_IMPL=sbcl
CL_WEBSERVER=hunchentoot

# read environment variables:
if [ -d $ENV_DIR ]; then

	# CL_IMPL:
	if [ -f $ENV_DIR/CL_IMPL ]; then
		CL_IMPL=$(cat $ENV_DIR/CL_IMPL)
	fi

	# CL_WEBSERVER:
	if [ -f $ENV_DIR/CL_WEBSERVER ]; then
		CL_WEBSERVER=$(cat $ENV_DIR/CL_WEBSERVER)
	fi

fi

#CL_DIR="$CACHE_DIR/$CL_IMPL"
CL_PATH="$BUILD_DIR/bin/$CL_IMPL"
echo "-----> assuming to find lisp binary at $CL_PATH"

echo "-----> compile params: $BUILD_DIR $CACHE_DIR $ENV_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

#case $CL_IMPL in
  #sbcl)
    #S3_BUCKET="sbcl-heroku"
    #CL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/sbcl-1.0.54-x86-64-linux-binary.tar.bz2"
    #DECOMPRESS="tar xjf - -C $CL_DIR"
    #;;
  #ccl)
    #S3_BUCKET="cl-heroku"
    #CL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/ccl-1.7.tgz"
    #DECOMPRESS="tar xzf - -C $CL_DIR"
    #export CCL_DEFAULT_DIRECTORY=$CL_DIR # overwrite CCL_DEFAULT_DIRECTORY on ccl64
    #;;
  #*)
    #echo "-----> ! Please set CL_IMPL: heroku config:add CL_IMPL={sbcl|ccl}."
    #exit 1
#esac

case $CL_WEBSERVER in
  hunchentoot)
    ;;
  aserve)
    # setting up paths for building
    echo "-----> Getting patched versions of libraries"
    
    mkdir $CACHE_DIR/repos    # should be under an if to avoid error
    pushd $CACHE_DIR/repos
    
    if [ -d $CACHE_DIR/repos/portableaserve ]; then
         echo 'aserve already present'
         pushd portableaserve
         git pull origin master
         popd
    else 
        git clone git://github.com/mtravers/portableaserve.git
    fi
    
    if [ -d $CACHE_DIR/repos/wuwei ]; then
         echo 'wuwei already present'
         pushd wuwei
         git pull origin master
         popd
    else 
        git clone git://github.com/mtravers/wuwei.git
    fi
    
    popd
    ;;
  *)
    echo "-----> ! Please set CL_WEBSERVER: heroku config:add CL_WEBSERVER={hunchentoot|aserve}."
    exit 1
esac

#echo "-----> Installing $CL_IMPL"
#if [ ! -d $CL_DIR ]; then
    #echo "-----> Fetching $CL_IMPL"
    #mkdir -p $CL_DIR  && curl $CL_PACKAGE -s -o -  | $DECOMPRESS
#fi

# add to slug 
#cp -r $CL_DIR $BUILD_DIR

#echo "$CL_IMPL installed" | indent

export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR
export CL_PATH
export CL_IMPL
export CL_WEBSERVER
export LANG

echo "-----> Starting build"
case $CL_IMPL in
  #sbcl) sh $CL_DIR/sbcl-1.0.54-x86-64-linux/run-sbcl.sh --load "$BUILDPACK_DIR/setup/compile.lisp";;
  sbcl) $CL_PATH --load "$BUILDPACK_DIR/setup/compile.lisp";;
  #ccl) $CCL_DEFAULT_DIRECTORY/scripts/ccl64 -l "$BUILDPACK_DIR/setup/compile.lisp";;
  ccl) $CL_PATH -l "$BUILDPACK_DIR/setup/compile.lisp";;
esac
echo "-----> Build finished"

chmod a+x $BUILD_DIR/lispapp

